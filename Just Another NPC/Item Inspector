prontera,150,150,4	script	Item Inspector	123,{

    // NPC Initialization
    OnInit:
        // No special initialization needed for this script
        end;

    // Main menu
    Menu:
        mes "Welcome to the Item Inspector!";
        mes "Enter the name of the player you want to inspect:";
        input .@playerName$;  // Get the player name input from the user
        
        // Check if the input is empty
        if (.@playerName$ == "") {
            dispbottom "You must enter a player name.";
            close;
        }

        // Get the target player's ID
        query_sql "SELECT `char_id` FROM `char` WHERE `name` = '"+.@playerName$+"'", .@target_charid;

        if (getarraysize(.@target_charid) == 0) {
            dispbottom "Player not found or is offline.";
            close;
        }

        // Display equipped items
        dispbottom "Equipped Items of " + .@playerName$ + ":";

        // Query to fetch equipped items by slot
        query_sql "SELECT `item_id`, `card1`, `card2`, `card3`, `card4`, `slot` FROM `equipment` WHERE `char_id` = " + .@target_charid[0], .@equip_item_id, .@equip_card1, .@equip_card2, .@equip_card3, .@equip_card4, .@equip_slot$;

        if (getarraysize(.@equip_item_id) > 0) {
            for (set .@i, 0; .@i < getarraysize(.@equip_item_id); set .@i, .@i + 1) {
                // Fetch item name from item_db
                query_sql "SELECT `name` FROM `item_db` WHERE `id` = " + .@equip_item_id[.@i], .@item_name$;
                set .@item_name$, .@item_name$[0];
                
                // Fetch card names for the equipped item
                setarray .@card_ids[0], .@equip_card1[.@i], .@equip_card2[.@i], .@equip_card3[.@i], .@equip_card4[.@i];
                set .@card_names$, "";

                for (set .@j, 0; .@j < getarraysize(.@card_ids); set .@j, .@j + 1) {
                    if (.@card_ids[.@j] > 0) {
                        query_sql "SELECT `name` FROM `card_db` WHERE `id` = " + .@card_ids[.@j], .@card_name$;
                        .@card_names$ += (getarraysize(.@card_name$) > 0 ? .@card_name$[0] : "Unknown") + " ";
                    } else {
                        .@card_names$ += "None ";
                    }
                }

                // Display item information based on slot type
                switch (.@equip_slot$[.@i]) {
                    case "head_top":
                        dispbottom "Top Headgear: " + .@item_name$ + ", Cards: " + .@card_names$;
                        break;
                    case "head_mid":
                        dispbottom "Middle Headgear: " + .@item_name$ + ", Cards: " + .@card_names$;
                        break;
                    case "head_low":
                        dispbottom "Lower Headgear: " + .@item_name$ + ", Cards: " + .@card_names$;
                        break;
                    case "armor":
                        dispbottom "Armor: " + .@item_name$ + ", Cards: " + .@card_names$;
                        break;
                    case "shield":
                        dispbottom "Shield: " + .@item_name$ + ", Cards: " + .@card_names$;
                        break;
                    case "weapon":
                        dispbottom "Weapon: " + .@item_name$ + ", Cards: " + .@card_names$;
                        break;
                    case "garment":
                        dispbottom "Garment: " + .@item_name$ + ", Cards: " + .@card_names$;
                        break;
                    case "shoes":
                        dispbottom "Shoes: " + .@item_name$ + ", Cards: " + .@card_names$;
                        break;
                    case "acc1":
                        dispbottom "Accessory 1: " + .@item_name$ + ", Cards: " + .@card_names$;
                        break;
                    case "acc2":
                        dispbottom "Accessory 2: " + .@item_name$ + ", Cards: " + .@card_names$;
                        break;
                }
            }
        } else {
            dispbottom "No equipped items found.";
        }

        close;
}
