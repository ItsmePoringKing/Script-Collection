// Basic Kafra NPC Script
//===================================================
// Kafra NPC
//===================================================
prontera,150,150,5	script	Kafra	123,{
	// NPC and Company names for display
	.@npc_name$ = "[Kafra]";
	.@comp_name$ = "Kafra Corporation";

	mes .@npc_name$;
	mes "Hello! Welcome to the Kafra Corporation.";
	mes "How can I assist you today?";
	next;

	switch(select("Open Storage","Manage Storage Password","Cancel")) {
	case 1:
		// Check if there is a password set and prompt for it if necessary
		callfunc("F_CheckKafCode");
		mes .@npc_name$;
		mes "Opening your storage...";
		openstorage;
		close;
		break;

	case 2:
		// Call the function to set, change, or clear the storage password
		callfunc("F_SetKafCode", .@npc_name$, .@comp_name$);
		break;

	case 3:
		mes .@npc_name$;
		mes "Thank you! Have a nice day!";
		close;
		break;
	}
}

//===================================================
// Check Storage Password Function
//===================================================
function	script	F_CheckKafCode	{
	// Retrieve the current password from the database
	.@result = query_sql("SELECT password FROM kafra_passwords WHERE account_id = " + getcharid(3), .@kafra_code);

	if (.@result == 0 || .@kafra_code == 0) {
		dispbottom "No storage password is set.";
		return;
	}
	mes "Enter your storage password:";
	input .@code_;
	if (.@code_ != .@kafra_code) {
		dispbottom "Wrong storage password.";
		close3;
	}
	@kafcode_try = 0;
	return;
}

// === Set / Change / Clear Storage Password Function ===
// getarg(0): NPC Name
// getarg(1): Company Name
//=======================================================
function	script	F_SetKafCode	{
	.@npc_name$ = getarg(0);
	.@comp_name$ = getarg(1);

	mes .@npc_name$;
	// Retrieve the current password from the database
	.@result = query_sql("SELECT password FROM kafra_passwords WHERE account_id = " + getcharid(3), .@kafra_code);

	if (.@result == 0 || .@kafra_code == 0) {
		mes "" + .@comp_name$ + " proudly presents you a new service:";
		mes "Additional storage protection with a password.";
		next;
		if (select("Set new password -> 5000z", "Cancel") == 1)
			callsub(S_SET, .@npc_name$, .@comp_name$);
		close3;
	}
	mes "Your storage is protected with a password. What would you do now?";
	next;
	switch(select("Change old password -> 5000z", "Remove storage password -> 1000z", "Cancel")) {
	case 1:
		mes .@npc_name$;
		mes "At first, please enter your ^0000FFold password^000000.";
		.@code = callfunc("F_EntKafCode");
		if (!.@code || .@code != .@kafra_code) {
			mes "Wrong password. You can't set a new password.";
			emotion ET_SCRATCH;
			break;
		}
		next;
		callsub(S_SET, .@npc_name$, .@comp_name$);
		break;
	case 2:
		mes .@npc_name$;
		mes "Please, enter your password before its removal.";
		.@code = callfunc("F_EntKafCode");
		if (!.@code) {
			mes "The password hasn't been removed.";
			emotion ET_SCRATCH;
			break;
		}
		next;
		mes .@npc_name$;
		if (Zeny < 1000) {
			mes "You don't have enough zeny.";
			emotion ET_MONEY;
			break;
		}
		Zeny -= 1000;
		if (.@code == .@kafra_code) {
			query_sql("DELETE FROM kafra_passwords WHERE account_id = " + getcharid(3));
			mes "You've successfully cleared your storage password.";
			mes "Thank you for using " + .@comp_name$ + ".";
			emotion ET_THANKS;
		} else {
			mes "Wrong password. We won't return your 1000z.";
			mes "Please, next time enter the correct password.";
			emotion ET_SORRY;
		}
		break;
	case 3:
		break;
	}
	close3;

S_SET:
	.@npc_name$ = getarg(0);
	.@comp_name$ = getarg(1);

	mes .@npc_name$;
	mes "Now enter your ^FF0000new password^000000 to protect your storage from thieves.";
	.@code = callfunc("F_EntKafCode");
	if (!.@code) {
		mes "The password hasn't been changed.";
		emotion ET_SCRATCH;
		return;
	}
	next;
	mes .@npc_name$;
	if (Zeny < 5000) {
		mes "You don't have enough zeny.";
		emotion ET_MONEY;
		return;
	}
	Zeny -= 5000;
	// Update the password in the database
	query_sql("REPLACE INTO kafra_passwords (account_id, password) VALUES (" + getcharid(3) + ", " + .@code + ")");
	mes "You've protected your storage with a secret password.";
	mes "Thank you for using " + .@comp_name$ + ".";
	emotion ET_THANKS;
	return;
}

//===================================================
// Basic Password Validation Function
//===================================================
function	script	F_EntKafCode	{
	mes "Enter a number 1000~10000000:";
	@kafcode_try += 1;
	if (@kafcode_try > 10) {
		@kafcode_try = 0;
		logmes "Tried to fit storage password.";
		return 0;
	}
	if (input(.@code_) == 1) {
		mes "You can't use such big password.";
		return 0;
	}
	if (.@code_ < 1000) {
		mes "You shouldn't use such short password.";
		return 0;
	}
	return .@code_;
}
